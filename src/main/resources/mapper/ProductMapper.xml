<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.medusa.basemall.product.dao.ProductMapper">
    <resultMap id="BaseResultMap" type="com.medusa.basemall.product.entity.Product">
        <id column="product_id" jdbcType="BIGINT" property="productId"/>
        <result column="product_name" jdbcType="VARCHAR" property="productName"/>
        <result column="remark" jdbcType="VARCHAR" property="remark"/>
        <result column="shelf_state" jdbcType="INTEGER" property="shelfState"/>
        <result column="send_place" jdbcType="VARCHAR" property="sendPlace"/>
        <result column="send_date" jdbcType="VARCHAR" property="sendDate"/>
        <result column="price" jdbcType="DECIMAL" property="price"/>
        <result column="market_price" jdbcType="DECIMAL" property="marketPrice"/>
        <result column="stock" jdbcType="INTEGER" property="stock"/>
        <result column="sales_volume" jdbcType="INTEGER" property="salesVolume"/>
        <result column="spec_type" jdbcType="BIT" property="specType"/>
        <result column="delivery_type" jdbcType="BIT" property="deliveryType"/>
        <result column="delivery_fees" jdbcType="DECIMAL" property="deliveryFees"/>
        <result column="logistic_model_id" jdbcType="INTEGER" property="logisticModelId"/>
        <result column="distribute_type" jdbcType="BIT" property="distributeType"/>
        <result column="service_assurance" jdbcType="VARCHAR" property="serviceAssurance"/>
        <result column="delete_state" jdbcType="BIT" property="deleteState"/>
        <result column="appmodel_id" jdbcType="VARCHAR" property="appmodelId"/>
        <result column="product_img" jdbcType="VARCHAR" property="productImg"/>
        <result column="create_time" jdbcType="VARCHAR" property="createTime"/>
        <result column="upate_time" jdbcType="VARCHAR" property="upateTime"/>
        <result column="rimg_url" jdbcType="LONGVARCHAR" property="rimgUrl"/>
        <result column="text_img" jdbcType="LONGVARCHAR" property="textImg"/>
        <result column="param_value" jdbcType="LONGVARCHAR" property="paramValue"/>
        <result column="product_type_list" jdbcType="VARCHAR" property="productTypeList"/>
        <result column="product_bulk" jdbcType="DOUBLE" property="productBulk"/>
    </resultMap>

    <sql id="Base_Column_List">
        product_id, product_name, remark, shelf_state, send_place, send_date, price, market_price,
        stock, sales_volume, spec_type, delivery_type, delivery_fees, logistic_model_id,
        distribute_type, service_assurance, delete_state, appmodel_id, product_img, create_time,
        upate_time, product_type_list, product_bulk
  </sql>

    <resultMap id="SimpleResultMap" type="com.medusa.basemall.product.vo.ProductSimpleVo">
        <id column="product_id" jdbcType="BIGINT" property="productId"/>
        <result column="product_name" jdbcType="VARCHAR" property="productName"/>
        <result column="remark" jdbcType="VARCHAR" property="remark"/>
        <result column="shelf_state" jdbcType="INTEGER" property="shelfState"/>
        <result column="spec_type" jdbcType="BIT" property="specType"/>
        <result column="price" jdbcType="DECIMAL" property="price"/>
        <result column="market_price" jdbcType="DECIMAL" property="marketPrice"/>
        <result column="stock" jdbcType="INTEGER" property="stock"/>
        <result column="sales_volume" jdbcType="INTEGER" property="salesVolume"/>
        <result column="appmodel_id" jdbcType="VARCHAR" property="appmodelId"/>
        <result column="product_img" jdbcType="VARCHAR" property="productImg"/>
        <result column="create_time" jdbcType="VARCHAR" property="createTime"/>
    </resultMap>

    <resultMap id="BackResultMap" type="com.medusa.basemall.product.vo.ProductBackViewVo" extends="SimpleResultMap">
        <result column="product_type_list" jdbcType="VARCHAR" property="productTypeList"/>
        <collection property="productSpecItems" column="product_id"
                    ofType="com.medusa.basemall.product.entity.ProductSpecItem"
                    select="com.medusa.basemall.product.dao.ProductSpecItemMapper.selectByProductId"/>
    </resultMap>


    <resultMap id="WxResultMapExted" type="com.medusa.basemall.product.vo.ProductWxVo" extends="SimpleResultMap">
        <result column="product_type_list" jdbcType="VARCHAR" property="productTypeList"/>
        <collection property="productSpecClassList" column="product_id"
                    select="com.medusa.basemall.product.dao.ProductSpecClassMapper.selectByProductId"></collection>
        <collection property="productSpecList" column="product_id"
                    select="com.medusa.basemall.product.dao.ProductSpecMapper.selectByProductId"></collection>
    </resultMap>

    <resultMap id="ViewActivetyMap" type="com.medusa.basemall.promotion.vo.OptionalProductItems"
               extends="SimpleResultMap">
        <collection property="productSpecItemList"
                    column="product_id"
                    select="com.medusa.basemall.product.dao.ProductSpecItemMapper.selectByNotActiveProduct"/>
    </resultMap>


    <update id="updateByLogisticModel" parameterType="com.medusa.basemall.product.entity.Product">
        update t_product
        set delivery_type = #{deliveryType,jdbcType=BIT},
        delivery_fees = #{deliveryFees,jdbcType=DECIMAL},
        logistic_model_id = #{logisticModelId,jdbcType=INTEGER}
        where logistic_model_id = #{logisticModelId,jdbcType=INTEGER}
    </update>

    <update id="batchUpdateShelfState" parameterType="map">
        update t_product
        set shelf_state=#{shelfState,jdbcType=INTEGER}
        where product_id in
        <foreach collection="productIds" index="index" item="productId"
                 separator="," open="(" close=")">
            #{productId,jdbcType=BIGINT}
        </foreach>
    </update>

    <update id="batchDelete" parameterType="list">
        update t_product
        set delete_state=1
        where product_id in
        <foreach collection="productIds" index="index" item="productId"
                 separator="," open="(" close=")">
            #{productId,jdbcType=BIGINT}
        </foreach>
    </update>

    <update id="updateSetProductTypeListToNull" parameterType="list">
        update t_product
        set product_type_list = null
        where product_id in
        <foreach collection="list" open="(" close=")" separator="," item="item">
            #{item}
        </foreach>
    </update>
    <update id="updateStock">
        update t_product
          set stock = stock + #{stock}
        where product_id = #{productId}
    </update>

    <select id="findProductForBack" resultMap="BackResultMap"
            parameterType="com.medusa.basemall.product.vo.ProductFindRequestVo">
        select
        distinct
        p.product_id,p.product_name,p.remark,p.product_img,p.price,p.stock,p.sales_volume,
        p.create_time,p.shelf_state,p.spec_type,p.appmodel_id,p.product_type_list
        from t_product p
        LEFT JOIN t_product_category pCategory ON pCategory.product_id = p.product_id
        where
        <if test="shelfState == 0 or shelfState == 1">
            p.shelf_state = #{shelfState,jdbcType=INTEGER}
        </if>
        <if test="shelfState == 2">
            p.shelf_state = 2
        </if>
        and
        p.appmodel_id = #{appmodelId,jdbcType=VARCHAR}
        and
        p.delete_state=0
        <if test="searchString != null and searchString != ''">
            and p.product_name like CONCAT('%','${searchString}','%' )
        </if>
        <if test="categoryId  != null and categoryId > 0">
            and pCategory.category_id = #{categoryId}
        </if>
    </select>


    <select id="findProductForWX" resultMap="BackResultMap"
            parameterType="com.medusa.basemall.product.vo.ProductFindRequestVo">
        SELECT
        DISTINCT
        p.product_id, p.product_name, p.remark,p.product_img,
        p.price,p.stock,p.sales_volume, p.create_time,p.shelf_state,
        p.spec_type,p.appmodel_id, p.product_type_list,p.market_price
        FROM
        t_product p
        LEFT JOIN t_product_category pCategory ON pCategory.product_id = p.product_id
        WHERE
        p.shelf_state in(0,2)
        and p.appmodel_id = #{appmodelId,jdbcType=VARCHAR} and p.delete_state=0
        <if test="searchString != null and searchString != ''">
            and (p.product_name like <![CDATA["${searchString}"]]> or  p.remark like <![CDATA["${searchString}"]]>)
        </if>
        <if test="categoryId  != null and categoryId > 0">
            and pCategory.category_id = #{categoryId}
        </if>
    </select>

    <select id="selectNotInIds" resultMap="SimpleResultMap" parameterType="map">
        select
        product_id,product_name,remark,product_img,price,stock,sales_volume,create_time,shelf_state,spec_type,appmodel_id
        from t_product
        where shelf_state = 0 and delete_state=0 and appmodel_id = #{appmodelId,jdbcType=VARCHAR}
        <if test="productIds !=null and productIds.size() > 0">
            and product_id not in
            <foreach collection="productIds" index="index" item="productId"
                     separator="," open="(" close=")">
                #{productId,jdbcType=BIGINT}
            </foreach>
        </if>
    </select>

    <select id="selectNotinOrInIdsSpec" resultMap="ViewActivetyMap" parameterType="map">
        select
          product_id,product_name,spec_type,remark,product_img,price,stock,sales_volume,create_time,shelf_state,spec_type,product_type_list,appmodel_id
        from t_product
        where shelf_state = 0 and delete_state=0 and appmodel_id = #{appmodelId,jdbcType=VARCHAR}
        <if test="productIds != null and productIds.size() > 0">
            and product_id
            <if test="type == 1">
                not in
            </if>
            <if test="type == 2">
                 in
            </if>
            <foreach collection="productIds" index="index" item="productId"
                     separator="," open="(" close=")">
                #{productId,jdbcType=BIGINT}
            </foreach>
        </if>
    </select>

    <select id="selectByProductIds" resultMap="WxResultMapExted" parameterType="list">
        select
        product_id,product_name,remark,product_img,price,stock,sales_volume,create_time,shelf_state,spec_type,product_type_list,appmodel_id
        from t_product
        <if test="productIds !=null and productIds.size() >0">
            where product_id in
            <foreach collection="productIds" index="index" item="productId"
                     separator="," open="(" close=")">
                #{productId,jdbcType=BIGINT}
            </foreach>
        </if>
    </select>

    <select id="selectByOrderDetail" resultMap="BaseResultMap" parameterType="java.lang.Long">
        select
            product.product_id, product.product_name, product.remark, product.shelf_state, product.send_place, product.send_date, product.price, product.market_price,
    product.stock, product.sales_volume, product.spec_type, product.delivery_type, product.delivery_fees, product.logistic_model_id,
    product.distribute_type, product.service_assurance, product.delete_state, product.appmodel_id, product.product_img, product.create_time,
    product.upate_time, product.product_type_list, product.productBulk
        from t_product product
        left join t_order_detail orderDetail on product.product_id = orderDetail.product_id
        where
        orderDetail.order_id = #{orderId,jdbcType=BIGINT}
    </select>


    <select id="selectUrgentProducts" resultMap="BaseResultMap"
            parameterType="java.lang.String">
        select
        <include refid="Base_Column_List"/>
        from t_product
        where shelf_state = 0 and appmodel_id = #{appmodelId,jdbcType=VARCHAR} and
        delete_state=0 and stock &lt;= 10 and stock &gt; 0
    </select>

    <select id="selectByAppmodelId" resultMap="BaseResultMap"
            parameterType="java.lang.String">
        select
          <include refid="Base_Column_List"/>
        from t_product
        where appmodel_id = #{appmodelId,jdbcType=VARCHAR} and delete_state=0
    </select>

    <select id="selectHotProduct" resultMap="BaseResultMap" parameterType="java.lang.String">
        select
        <include refid="Base_Column_List"/>
        from t_product
        where shelf_state = 0 and appmodel_id = #{appmodelId,jdbcType=VARCHAR} and delete_state = 0 AND sales_volume > 0
        order by sales_volume desc limit 10
    </select>

    <select id="selectProductSimpleVo" resultMap="SimpleResultMap" parameterType="java.lang.String">
        select
           product_id,product_name,remark,product_img,price,stock,sales_volume,create_time,shelf_state,spec_type,appmodel_id
        from t_product
        where shelf_state = 0 and delete_state = 0 and appmodel_id = #{appmodelId,jdbcType=VARCHAR}
    </select>

    <select id="selectHomePageSckillProduct" resultMap="BackResultMap">
        SELECT
            p.product_id, p.product_name, p.remark,p.product_img,
            p.price,p.stock,p.sales_volume, p.create_time,p.shelf_state,
            p.spec_type,p.appmodel_id, p.product_type_list,p.market_price
        FROM
          t_product p
        LEFT JOIN t_activity_product ap ON ap.activity_id = #{activitySeckillId}
        WHERE p.appmodel_id = #{appmodelId}
        AND ap.home_view_stat = 1 and ap.product_id = p.product_id
        and ap.activity_type = 4001
    </select>

    <select id="findSeckillProduct" resultMap="BackResultMap">
        SELECT
            p.product_id, p.product_name, p.remark,p.product_img,
            p.price,p.stock,p.sales_volume, p.create_time,p.shelf_state,
            p.spec_type,p.appmodel_id, p.product_type_list,p.market_price
        FROM
          t_product p
        LEFT JOIN t_activity_product ap ON ap.activity_id = #{activitySeckillId}
        WHERE p.appmodel_id = #{appmodelId}
        and ap.product_id = p.product_id
        and ap.activity_type = 4001
        and p.shelf_state = 0
        and p.delete_state = 0
        order by ap.sort
    </select>
    <select id="selectPlateProductIds" resultMap="BackResultMap" parameterType="list">
        select
        <include refid="Base_Column_List"/>
        from t_product
        where
         product_id in 
        <foreach collection="productIds" item="id"  separator="," open="(" close=")">
          #{id}
        </foreach>
    </select>

</mapper>